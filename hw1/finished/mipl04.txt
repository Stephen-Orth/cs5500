proglbl -> PROGRAM
  TOKEN: PROGRAM	 LEXEME: program
ident -> IDENT
  TOKEN: IDENT	 LEXEME: stuff
identlist -> epsilon
sign -> MINUS
  TOKEN: MINUS	 LEXEME: -
intconst -> sign VALIDINT
TOKEN: INTCONST	 LEXEME: 1
idx -> intconst
sign -> epsilon
intconst -> sign VALIDINT
TOKEN: INTCONST	 LEXEME: 20
idx -> intconst
idxrange -> idx DOTDOT idx
  TOKEN: DOTDOT	 LEXEME: ..
simple -> INTEGER
  TOKEN: INTEGER	 LEXEME: integer
array -> ARRAY LBRACKET idxrange RBRACKET OF simple
  TOKEN: ARRAY	 LEXEME: array
  TOKEN: LPAREN	 LEXEME: [
  TOKEN: RPAREN	 LEXEME: ]
  TOKEN: OF	 LEXEME: of
typez -> array
vardec -> ident identlist COLON typez
  TOKEN: COLON	 LEXEME: :
ident -> IDENT
  TOKEN: IDENT	 LEXEME: data
ident -> IDENT
  TOKEN: IDENT	 LEXEME: max
identlist -> epsilon
identlist -> COMMA ident identlist
  TOKEN: COMMA	 LEXEME: ,
simple -> INTEGER
  TOKEN: INTEGER	 LEXEME: integer
typez -> simple
vardec -> ident identlist COLON typez
  TOKEN: COLON	 LEXEME: :
ident -> IDENT
  TOKEN: IDENT	 LEXEME: i
ident -> IDENT
  TOKEN: IDENT	 LEXEME: loc
identlist -> epsilon
identlist -> COMMA ident identlist
  TOKEN: COMMA	 LEXEME: ,
simple -> INTEGER
  TOKEN: INTEGER	 LEXEME: integer
typez -> simple
vardec -> ident identlist COLON typez
  TOKEN: COLON	 LEXEME: :
Traceback (most recent call last):
  File "mipl.py", line 230, in <module>
    main(sys.argv)
  File "mipl.py", line 227, in main
    tree = parser.prog()
  File "/Users/ewillard/dev/school/cs5500/hw1/miplParser.py", line 424, in prog
    self.block()
  File "/Users/ewillard/dev/school/cs5500/hw1/miplParser.py", line 520, in block
    self.vardecpart()
  File "/Users/ewillard/dev/school/cs5500/hw1/miplParser.py", line 591, in vardecpart
    self.vardeclist()
  File "/Users/ewillard/dev/school/cs5500/hw1/miplParser.py", line 654, in vardeclist
    self.vardeclist()
  File "/Users/ewillard/dev/school/cs5500/hw1/miplParser.py", line 652, in vardeclist
    localctx.i = self.match(miplParser.SCOLON)
  File "/Users/ewillard/dev/school/cs5500/hw1/cs5500/lib/python3.6/site-packages/antlr4/Parser.py", line 118, in match
    t = self._errHandler.recoverInline(self)
  File "/Users/ewillard/dev/school/cs5500/hw1/cs5500/lib/python3.6/site-packages/antlr4/error/ErrorStrategy.py", line 392, in recoverInline
    if self.singleTokenInsertion(recognizer):
  File "/Users/ewillard/dev/school/cs5500/hw1/cs5500/lib/python3.6/site-packages/antlr4/error/ErrorStrategy.py", line 425, in singleTokenInsertion
    self.reportMissingToken(recognizer)
  File "/Users/ewillard/dev/school/cs5500/hw1/cs5500/lib/python3.6/site-packages/antlr4/error/ErrorStrategy.py", line 333, in reportMissingToken
    recognizer.notifyErrorListeners(msg, t, None)
  File "/Users/ewillard/dev/school/cs5500/hw1/cs5500/lib/python3.6/site-packages/antlr4/Parser.py", line 314, in notifyErrorListeners
    listener.syntaxError(self, offendingToken, line, column, msg, e)
  File "/Users/ewillard/dev/school/cs5500/hw1/cs5500/lib/python3.6/site-packages/antlr4/error/ErrorListener.py", line 60, in syntaxError
    delegate.syntaxError(recognizer, offendingSymbol, line, column, msg, e)
  File "mipl.py", line 219, in syntaxError
    raise Exception("SYNTAX ERROR ON LINE " + str(line) + "!!! \n" + " --> What the heck is '" +offendingSymbol.text + "' ?")
Exception: SYNTAX ERROR ON LINE 11!!! 
 --> What the heck is 'procedure' ?
